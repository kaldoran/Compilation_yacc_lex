#!/usr/bin/cpyrr
# -*- coding: utf-8 -*-

% SALADE_DE_FRUITS %

# Le type Orange
type Orange :
  struct
    nb_litres_de_jus : int;
    bresilienne : bool;
    un_peu_de_vodka_avec : bool;
  end struct;

# Le type Ananas
type Ananas :
  struct
    on_en_fait_une_pina_colada : bool;
    est_il_jaune : bool;
  end struct;

# Le Type Coca
type Coca :
  struct
    ca_se_fume : bool;
    ca_se_boit : bool;
    nb_litre_de_sucre_par_cm3 : int;
  end struct;

# Le Type Coco
type Coco :
  struct
    si_tu_me_donnes_tes_noix_de_coco_je_te_donnerai_mes_ananas : int;
    on_en_fait_du_lait_de_coco : bool;
    on_en_fait_du_coco_chanel : bool;
  end struct;

# Le Type Banane
type Banane :
  struct
    ca_se_mange_en_compote : bool;
    cm3_de_puree_de_banane : int;
  end struct;

# Une liste de fruits
type OrangeListe : array[0..5] of Orange;
type AnanasListe : array[0..6] of Ananas;
type CocaListe : array[0..2] of Coca;
type CocoListe : array[0..3] of Coco;
type BananeListe : array[0..2] of Banane;

# Salade de fruit
type SaladeDeFruits :
  struct
    oranges : OrangeListe;
    ananas : AnanasListe;
    cocas : CocaListe;
    cocos : CocoListe;
    bananes : BananesListe;
    est_comestible : bool;
  end struct;

# Données
var ma_salade : SaladeDeFruits;

# Traiter une salade de fruits
proc traiter(salade : SaladeDeFruits)
  var i : int;
  start
  { 
    # Oranges
    write("Oranges:\n");

    for(i = 0; i <= 5; ++i) do {
      write("  Litres: %d\n", salade.oranges[i].nb_litres_de_jus); 
      
      if salade.oranges[i].bresilienne then {
        write("  L'orange est brésilienne.\n");
      }

      if salade.oranges[i].un_peu_de_vodka_avec then {
        write("  Cette orange est vraiment une ivrogne.\n");
      }
    }

    write("\nAnanas:\n");

    # Ananas
    for(i = 0; i <= 6; i++) do {
      if salade.ananas[i].on_en_fait_une_pina_colada then {
        write("  Houla ! Pas trop fort !\n");
      }

      if salade.ananas[i].on_en_fait_une_pina_colada and !salade.ananas[i].est_il_jaune then {
        write("  Une Pina Colada avec un ananas pas jaune ? C'est du cyanure ?\n");
      }
    }

    write("\nCocas:\n");

    # Cocas
    for(i = 0; i <= 2; i++) do {
      if salade.cocas[i].ca_se_fume and salade.cocas[i].ca_se_boit then {
        write("  Pas bon tout ça !\n");
      }
    }

    write("\nCocos:\n");

    # Cocos
    for(i = 0; i <= 3; i++) do {
      if salade.cocos[i].si_tu_me_donnes_tes_noix_de_coco_je_te_donnerai_mes_ananas > 20 then {
        if salade.ananas[i].on_en_fait_une_pina_colada then {
          write("  On fait déjà une pina colada, on va pas non plus te donner des noix de coco.\n");
        }
        else 
        {
           salade.cocos[i].si_tu_me_donnes_tes_noix_de_coco_je_te_donnerai_mes_ananas -= 10;
           salade.ananas[i].on_en_fait_une_pina_colada = true;
           write("  Parfait ! Voilà tes noix de coco !\n");
        }
      }
      else if on_en_fait_du_lait_de_coco and on_en_fait_du_coco_chanel then {
        on_en_fait_du_lait_de_coco = (on_en_fait_du_coco_chanel = false);
      }
    }

    # Bananes
    i = 0;
    write("\nBananes:\n");
    
    while (i++) != 3 do {
       if ca_se_mange_en_compote and rand() > 3 + salade.oranges[rand() % 6].nb_litres_de_jus and 10 > cm3_de_puree_de_banane then {
         write("  Une superbe purée aléatoire !\n");
       }
    }

    return;
  };

# Programme
start
{
  remplir(ma_salade);

  if !ma_salade.est_comestible then {
    ma_salade.oranges[0].nb_litres_de_jus = ma_salade.bananes[1].cm3_de_puree_de_banane;
  }

  traiter(ma_salade);

  return 0;
}

